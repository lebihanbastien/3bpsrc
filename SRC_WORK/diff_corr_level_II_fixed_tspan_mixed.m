function [tmdn, ymdn, yma] = diff_corr_level_II_fixed_tspan_mixed(tmd, ymd, N2, dcs, inputType)

%--------------------------------------------------------------------------
% Copy the departure state
%--------------------------------------------------------------------------
tmdn = tmd;
ymdn = ymd;

%--------------------------------------------------------------------------
% Loop
%--------------------------------------------------------------------------
normC = 1e5;
iter = 0;
while(normC > 1e-6 && iter < 10)
    
    fprintf('---------------------------------------------------\n');
    fprintf('Level I\n');
    fprintf('---------------------------------------------------\n');
    
    %----------------------------------------------------------------------
    % Level one. After this point: continuity in position is ensured
    %----------------------------------------------------------------------
    [tmdn, ymdn, yma] = diff_corr_level_I_fixed_tspan(tmdn, ymdn, N2, dcs, inputType);
    
    fprintf('---------------------------------------------------\n');
    fprintf('Level II\n');
    fprintf('---------------------------------------------------\n');

    %--------------------------------------------------------------------------
    % Vector that will contain all corrections to make at all patch points
    %--------------------------------------------------------------------------
    kv = zeros(3, N2-2);
    
    %----------------------------------------------------------------------
    % Level two
    %----------------------------------------------------------------------
    normC = 0.0;
    for k = 1:N2-2 %only the inner points!       
        %------------------------------------------------------------------
        % The arrival state contains all the desired elements
        %------------------------------------------------------------------
        % Final state
        ypa = yma(k+1,:)';
        % STM
        STMa = vectorToMatrix(ypa, 6, 6, 6);

        %------------------------------------------------------------------
        % The departure state contains all the desired elements
        %------------------------------------------------------------------
        % Final state
        ypd = ymdn(k+1,:)';
        
        %------------------------------------------------------------------
        % Level II matrix
        %------------------------------------------------------------------
        L = STMa(4:6,4:6);
        
        %------------------------------------------------------------------
        % Update the error vector
        %------------------------------------------------------------------
        b = -(ypd(4:6) - ypa(4:6));
        normC = normC + norm(b);
        
        %------------------------------------------------------------------
        % Minimum norm solution
        %------------------------------------------------------------------
        kv(:,k) = L\b;
    end
    
    fprintf('Level II. normC = %5.15e\n', normC);
    
    %----------------------------------------------------------------------
    % Update the free variables
    %----------------------------------------------------------------------
    for k = 1:N2-2
        % The state at position k
        ymdn(k,4:6) = ymdn(k, 4:6) - kv(1:3, k)';
   end
    
    %----------------------------------------------------------------------
    % Update number of iterations
    %----------------------------------------------------------------------
    iter = iter + 1;
end

end

